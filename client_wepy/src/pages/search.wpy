<template>
  <search> </search>
</template>


<script>
  import wepy from 'wepy';
  import wxSearchs from '../components/wxSearch';
  import http from '../utils/Base';
import api from '../utils/API';
  export default class Search extends wepy.page {
    config = {
      navigationBarTitleText: '搜索',
    }
    components = {
       search: wxSearchs,
    }
    data = {
      list: [],
      showLoading: false,
      purchasetype: 1,
      is_empty: false,
      is_filter:false,
      //当前页面
      currentPage: 1,
      //总页数
      page_total: 0,
      keyword: "",
      keywordhisList: [],
      cateCode: "",
      show: true,
      sort: -1,
      title: "",
      skuval: ""
    }
    async getKeyWordHisList() {
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let openId = userSpecialInfo.openid;
      const json = await api.searchKeywordList({
        query: {
          openId: openId
        }
      });
      if (json.data.code == 0) {
        this.keywordhisList = json.data.list;
      }
      this.$apply();
    }
    setTitle(title) {
      wepy.setNavigationBarTitle({
        title: title
      })
    }
    onLoad(option) {
      //  get district（如：番禺区）   keyword
      http.get(api.SearchIndex,{district:'番禺区',keyWord:"娃娃"}).then(res=>{
        console.log(res)
      })
    }
    computed = {}
    async doSearchGoods(keyword, currentPage, size) {
      let that = this;
      const json = await api.getGoodsList({
        query: {
          page: currentPage || 1,
          size: size || 10,
          searchKeyWords: this.keyword,
          cateCode: this.cateCode || "",
          sort: this.sort,
          skuval: this.skuval
        }
      });
      if (json.data.code == 0) {
        that.list = [...that.list, ...json.data.list];
        that.page_total = json.data.page_total;
        if (json.data.page_total == 0) {
          //暂无数据
          that.is_empty = true;
        }
      } else {
        tip.error(json.data.msg);
      }
      that.showLoading = false;
      that.$apply();
      if (keyword.length > 0) {
        let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
        let openId = userSpecialInfo.openid;
        const resultJson = await api.addSearchKeyword({
          query: {
            openId: openId,
            keyword: keyword
          }
        });
      }
    }
    async clearUserKeywords() {
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let openId = userSpecialInfo.openid;
      const json = await api.clearSearchKeyword({
        query: {
          openId: openId
        }
      });
      if (json.data.code == 0) {
        this.keywordhisList = [];
      } else {
        tip.error(json.data.msg);
      }
      this.$apply();
    }
    methods = {
      doSearch(val) {
        this.list = [];
        this.is_empty = false;
        //tip.success("搜索：" + val);
        this.showLoading = true;
        this.keyword = val;
        this.doSearchGoods(val);
        //this.list = bb.result.products;
        //this.$apply();
      },
      currentType(obj) {
        //tip.success("状态:" + obj);
        var name = obj.name;
        var type = obj.type;
        if (name == "zhonghe") {
          this.sort = -1;
        } else if (name == "sale") {
          this.sort = 3;
        } else if (name == "price") {
          if (type == "desc") {
            this.sort = 2;
          } else if (type == "asc") {
            this.sort = 1;
          }
        } else if (name == "sku") {
          this.skuval = type;
        }
        this.list = [];
        this.is_empty = false;
        this.showLoading = true;
        this.$invoke('search', 'show', "0");
       // this.show = false;
        this.doSearchGoods(this.keyword);
      },
      selHisKeyWord(e) {
        console.log(e);
        var id = e.currentTarget.dataset.id;
        var hisKeyword = "";
        for (var i = 0; i < this.keywordhisList.length; i++) {
          this.keywordhisList[i].sel = 0;
          if (id == this.keywordhisList[i].id) {
            hisKeyword = this.keywordhisList[i].keyword;
            this.keywordhisList[i].sel = 1;
          }
        }
        if (hisKeyword.length > 0) {
          this.keyword = hisKeyword;
          this.doSearchGoods(hisKeyword);
        }
      },
      clearHis() {
        this.clearUserKeywords();
      },
      onShareAppMessage: function(res) {
        if (res.from === 'button') {
          // 来自页面内转发按钮
          console.log(res.target)
        }
        return {
          title: this.detail.name,
          path: '/pages/search?cateCode=' + this.cateCode + '&title=' + this.title,
          success: function(res) {
            // 转发成功
          },
          fail: function(res) {
            // 转发失败
          }
        }
      }
    }
    //加载更多
    onReachBottom() {
      let that = this;
      that.showLoading = true;
      console.log(that.page_total + "===" + that.currentPage);
      //判断总页数是否大于翻页数
      if ((that.page_total) > that.currentPage) {
        //防止重复加载
        if (that.preventRepeatReuqest) {
          return true;
        }
        that.preventRepeatReuqest = true;
        that.currentPage++;
        that.doSearchGoods("", that.currentPage);
        that.preventRepeatReuqest = false;
      } else {
        that.showLoading = false;
      }
    };
  }
</script>
