<style lang="scss">

 page{
    background-color:#f0f0f0;
} 
.container {
  margin: 0;
  padding: 0;
  height: 100%;
}
.shopListBox{
  width:100%;
  margin-bottom:30rpx;
  border-radius: 20rpx;
  margin-top: 10px;
  border: 1px solid #fff;
  background-color: #fff;
}
.shopListBox:last-child{
  /* padding-bottom: 100rpx; */
}
.shopListBox .footer-pay .itemdisbase {
  background: #999;
  color: #fff;
}
.shop-top{
  position:fixed;
  top:0;
  left: 0;
  right:0;
  z-index:1024;

}

.shop-info{
    display:flex;
    /* position: relative; */
    align-items:center;
    color:#ff6700;
    background-color: #fff;
    transition: all 4s linear;
    transform: rotate(0);
    border-top-left-radius:20rpx;
    border-top-right-radius:20rpx;
    border-bottom: 1px solid #eee;
}


.footer-pay .item4{background:#bebebe !important;}
.addlist {
  width: 700rpx;
  padding: 0 25rpx;
  line-height: 60rpx;
  height: 60rpx;
  font-size: 30rpx;
  position: relative;
  padding-top: 30rpx
}

.addlist::after {
  content: "";
  position: absolute;
  right:25rpx;
  top: 50%;
  width: 16rpx;
  height: 12rpx;
  border-left: 1px solid currentColor;
  border-top: 1px solid currentColor;
  transform: translate3d(0, -50%, 0) rotate(135deg);
  -webkit-transform: translate3d(0, -50%, 0) rotate(135deg);
  opacity: 1;
}



.goodListBox {
  padding:24rpx 0;
  margin-left: 65rpx;
  margin-right: 8rpx;
  background: #fff;
  position: relative;
  border-bottom: 1rpx solid #eee; 
}
.goodListBox:last-child{
border-bottom: none;
}

.goodBox {
  display: -webkit-flex;
  display: flex;
  position: relative;
}


.goodBox .item-check {
  -webkit-box-flex: 0;
  -webkit-flex: none;
  flex: none;
  border: none;
  width: 60rpx;
  height: 180rpx;
  position: relative;
  background: url(https://s1.mi.com/m/images/m/check_normal.png) no-repeat center center;
  background-size: 40rpx 40rpx;
}

.goodBox .check ,.item2 .check {
  background: url(https://s1.mi.com/m/images/m/check_press.png) 50% 50% no-repeat;
  background-size: 40rpx 40rpx;
}

.shopCheck {
  -webkit-box-flex: 0;
  -webkit-flex: none;
  flex: none;
  border: none;
  width: 60rpx;
  height: 100rpx;
  position: relative;
  background: url(https://s1.mi.com/m/images/m/check_press.png) 50% 50% no-repeat;
  background-size: 40rpx 40rpx;
}
.list-img {
  -webkit-box-flex: 0;
  -webkit-flex: none;
  flex: none;
  display: block;
  position: relative;
  width: 180rpx;
  height: 180rpx;
  margin-right: 20rpx;
  /* border: 1px solid #eee;
  border-radius: 2px; */
}

.list-img img {
  height: 100%;
}

.info-tit {
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  text-align: left;
  width:100%;
}

 .name {
  font-size: 32rpx;
  line-height: 1.2;
  color: #666;
  margin-bottom: 12rpx;
  margin-right: 30rpx;
  display: box;
  box-align: start;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
}

 .price-without {
  font-size: 32rpx;
  color: #999;
  margin-bottom: 12rpx;
  padding-top: 10rpx;
}

 .xm-input-number {
  border: 1rpx solid #eee;
  width: 227rpx;
  display: flex;
  align-items: center;
  height: 60rpx;
}

 .input-sub,  .input-add {
  height: 60rpx;
  line-height: 60rpx;
  float: left;
  width: 60rpx;
  text-align: center;
  background: #fafafa;
}

 .input-num {
  width: 50rpx;
  float: left;
  height: 60rpx;
  text-align: center;
  font-size: 30rpx;
}

.delete {
  width: 60rpx;
  height: 60rpx;
}

.spce{
  display: flex;
  color:#aaa;
  font-size:24rpx;
  padding: 8rpx;
}

.price-without{
  width:100%;display:block
  }
.price-without text {
  margin-right: 6rpx;
}


.item-check {
  -webkit-box-flex: 0;
  -webkit-flex: none;
  flex: none;
  border: none;
  width: 60rpx;
  height: 100rpx;
  position: relative;
  background: url(https://s1.mi.com/m/images/m/check_normal.png) no-repeat center center;
  background-size: 40rpx 40rpx;
  float: left;
}

.empty-box {
  padding: 30rpx 30rpx;
  width: 690rpx;
}

.empty-box image {
  /* width: 40%; */
  margin: 0 auto;
  display: block;

}

.empty-box .span {
  font-size: 36rpx;
  padding: 18rpx 0;
  display: block;
  text-align: center;
  margin-left:35rpx;
margin-top:30rpx;

}

.empty-box .goindex {
  width: 50%;
  height: 70rpx;
  line-height: 70rpx;
  text-align: center;
  background: #f37d6a;
  color: #fff;
  margin: 0 auto;
  font-size: 32rpx;
  margin-top:100rpx;

}

.bindphone{
  width: 50%;
  height: 70rpx;
  line-height: 70rpx;
  text-align: center;
  background: #f37d6a;
  color: #fff;
  margin: 0 auto;
  font-size: 32rpx;
  margin-top:700rpx;
}




.footer-pay {
width: 100%;
height: 90rpx;
bottom: 0;
display: flex;
align-items: center;
padding-bottom: 15px;
background-color: #fff;
position: relative;
 border-top: 1px solid #eee;
}

.footer-pay .item {
  display: table-cell;
color: #f37d6a;
font-size: 30rpx;
padding-left: 60rpx;
vertical-align: bottom;
padding-top: 40rpx;
}

.footer-pay .item2 {
  background-color: #f37d6a;
  color: #fff;
  font-size: 28rpx;
  text-align: center;
  position: absolute;
  padding:8rpx;
  border-radius: 15rpx;
  right:30rpx;
  bottom:20rpx;
}

.lower-shelf{
  position: absolute;
  color:#fff;
  background-color: #aaa;
  opacity: 1;
  z-index:-10;
  display: flex;
  align-items: center;
  justify-content: center;
  left: 70rpx;
  right: 20rpx;

  height: 200rpx;
  .text-box{
    width: 150rpx;
    font-size:50rpx;
    text-align: center;
    text{
      margin-top:30rpx;
    }
  }
}
</style>



<template>
  <view wx:if="{{init}}">
    <view   class='container' >
      <!-- 商家列表 -->
      <view class='shopListBox' wx:for="{{shopList}}" wx:for-item="shopItem" wx:for-index="shopIndex" wx:key="index"  id="{{shopIndex}}">
        
        <!-- 商家头-->
        <view  class="shop-info {{currentShop==index ? 'shop-top' : ''}} " @tap="goShoper('{{shopItem}}')" >
            <view class=" {{shopItem.shopChecked==1?'shopCheck':'item-check'}}" data-shopindex="{{shopIndex}}"  @tap.stop="selectedShop"></view>
            <view style="margin-left: 10rpx;">
              <image style="padding-bottom:2%;width:60rpx;height:60rpx;border-radius:50%;" src="{{imageUrl + shopItem.shop_icon}}"/>
            </view>
            <view style="margin-left:20rpx;font-size:30rpx;flex:10;" >{{shopItem.shop_name}}</view>
            <icon class="iconfont " style="flex:1;" >&#xe6ab;</icon>
        </view>

        <!-- 商品列表 -->
        <block wx:for="{{cartList[shopIndex]}}" wx:for-item="cartItem" wx:for-index="cartIndex">
          <view class="goodListBox ">
            <view @tap="lowerShelf({{cartItem}})" 
                  style="{{cartItem.is_on_sale==0?'opacity:0.8;z-index:10;':''}}" 
                  class="lower-shelf">
                  <view class="text-box">
                    <text>已下架</text>
                  </view>
            </view>           
            <view class='goodBox'>
              <view class="item-check {{cartItem.checked?'check':''}}"  bindtap='selectedlist' data-currentGood="{{cartItem}}"></view>
                <view class='list-img'>
                <navigator url='/pages/goodDetail?goodId={{cartItem.goods_id}}&shopId={{cartItem.shop_id}}'>
                  <image style="width:78px;height:78px;border-radius: 5px;" src='{{imageUrl + cartItem.primary_pic_url}}' mode='scaleToFill'></image>
                  </navigator>
                </view>
              <view class='info-tit'>
                <!--商品名-->
                <view style="display:flex;justify-content:space-between;align-items:center;">
                    <text class='name'>{{cartItem.goods_name}}</text>
                    <view class='delete' bindtap='delecart' data-currentGood="{{cartItem}}">
                        <image style="width:25px;height:25px;" src="{{StaticImgUrl+'delInCar.jpg'}} " mode='widthFix'/>
                    </view> 
                </view> 
                <!--规格-->
                <view class="spce">
                    <view>商品属性：</view>
                    <view wx:if="{{cartItem.goods_specifition_name_value==null}}">默认规格</view>
                    <view wx:else>{{cartItem.goods_specifition_name_value}}</view>
                </view> 
                <!--单价和数量-->
                <view style="display:flex;align-items:center;">
                    <view class='price-without'>¥:{{cartItem.retail_price}}</view>
                    <view class='xm-input-number'>
                      <view class='input-sub' bindtap='subnum' data-currentGood="{{cartItem}}" data-currentshop="{{shopItem}}">-</view>
                      <input class='input-num' value='{{cartItem.number}}' disabled='true' type='number'/>
                      <view class='input-add' bindtap='addnum' data-currentGood="{{cartItem}}" data-currentshop="{{shopItem}}">+</view>
                    </view>
                </view>
              </view>      
            </view>
          </view>
        </block>
        <!--结算购买-->
        <view class='footer-pay'>
          <view class='item'>
            <text>总金额:</text>
            <text style="text-decoration:underline;margin:0rpx 20rpx;font-size:50rpx;">{{totalList[shopIndex].money}}</text>
            <text>元</text>
          </view>
          <view class='item2'  bindtap='goOrder' data-currentshop="{{shopItem}}">前往结算</view>
          </view>
        </view>

        <!--购物车空-->
        <view class='empty-box' wx:if="{{shopList.length==0}}">
          <image src="{{StaticImgUrl+'noneCart.png'}} "
            mode='widthFix'/>
          <view class='goindex' bindtap='gotoindex'>去商城逛逛吧</view>
        </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import http from '../utils/Base';
import api from '../utils/API';
export default class Cart extends wepy.page{
  config = {
        "navigationBarTitleText": "购物车"
    };
    data = {
      init:false,
    userInfoInServer: {phone:""},
    imageUrl: "https://mingrui-static.oss-cn-shenzhen.aliyuncs.com/",
    StaticImgUrl: "http://mingrui-static.oss-cn-shenzhen.aliyuncs.com/zq/",
    currentShop:0,//当前置顶店铺
    shopChangeHeight:[],//每个店铺的改变时记下页面的高度
    shopHeightValues:[],//每个店铺的height值
    scrollTop_old:0,//页面滑动旧值，判断上下滑

    pronum: [],
    num: 1,
    car: [],
    
    totalPrice: 0,
    totalnum: 0,
    pic: '',
    
    allList:{},//
    shopList:[],//商铺列表
    cartList:[],//后台返回的购物车列表
    shopCheckList:[],//是否勾选商家
    totalList:[{
    }],//每个商铺的商品数目和总价格

    checkedGoodNum:0,//当前购物车中勾选的商品个数
    checkGoodTotal:0,//购物车已勾选的总价格
  }
  onLoad(e){
     
  }
  onShow(e){
    
    new Promise((resolve,reject)=>{   
        http.get(api.CartList,{user_id: wx.getStorageSync('userInfoInServer').id}).then(res =>{
          console.log(res)
          this.userInfoInServer = wx.getStorageSync("userInfoInServer");
          this.allList = res;//触发监听器
          this.init = true;
          this.$apply();
        })
    })
  }
  //离开当前页面前将本地数据和后台同步
  onHide(e){
    //同步勾选

    //同步商品数

  }

  watch = {
    allList (_new,old){
      // console.log(_new)
      var that = this;
      that.shopList= [];
      that.cartList= [];
      that.totalList = [];
      that.shopCheckList = [];
      var total = new Object();
      var shopCheck = 1;
      for(let index in _new){       
        _new[index].shopInfo["shopChecked"] = 1; //添加商家勾选属性 
        for(let goodIndex in _new[index].cartList){
            _new[index].shopInfo["shopChecked"] &=  _new[index].cartList[goodIndex].checked;
        }  
        that.shopList.push(_new[index].shopInfo);//商家信息
        that.cartList.push(_new[index].cartList);//该商家的购物列表
        total["num"] = _new[index].CountNum; //通过eval表达式可以给obj动态的赋值 ;该商家勾选的商品数
        total["money"] = _new[index].TotalPrice;//该商家勾选商品的总价格
        that.totalList.push(total);
        total={};
      }
      this.$apply();
        console.log(that.shopList)
        console.log(that.cartList)
    }
  }
  //提交商品数量到后台
    changeFoodNum(cartId,goodId,number,shopId){
      var that = this;
      console.log(number)
      http.post(api.CartUpdate,{
        id:cartId,
        goods_id:goodId,
        number:number,
        shop_id:shopId,
        user_id:wx.getStorageSync('userInfoInServer').id
      }).then(res=>{
        console.log(res);
        if(res.code == 201){
          wx.showModal({
              title: '添加失败',
              content: res.msg,
              showCancel: false
          })
        }else{
            that.allList = res;
            this.$apply();
        }
      })
    }
    methods = {
      //购物车全选事件
    selectedShop: function(e) {
      var index = e.currentTarget.dataset.shopindex;
      var currentShop = this.shopList[index];
      
      if(currentShop.shopChecked){
        currentShop.shopChecked = 0;
      }else{
        currentShop.shopChecked = 1;
      }
      
      http.post(api.CartChechedAll,{shop_id:currentShop.id,
      user_id:wx.getStorageSync('userInfoInServer').id,
      checked_all:currentShop.shopChecked}).then(res=>{
        console.log(res)
        this.allList = res;   
        this.$apply() ;  
      }) 
    },
      //前往商家
    goShoper(res){
      console.log(res);
      let url = '/pages/shoper?shop_id=';
        url = url + res.id;
        wx.navigateTo({
          url: url,
      })
    },
    //改变勾选
    selectedlist: function (e) {
      // console.log(e)
      var currentGood = e.currentTarget.dataset.currentgood;
      
      console.log(currentGood);
      
      var goods_id = currentGood.goods_id;
      var id = currentGood.id;
      var checked = currentGood.checked;//当前商品勾选值

      if(checked){
          checked = 0;
      }else{
        checked = 1; 
      }
      console.log(checked);
      // new promise((resolve,reject) =>{
        http.post(api.CartChecked,{
          goods_id: goods_id,
          id: id,
          user_id:wx.getStorageSync('userInfoInServer').id,
          checked: checked}).then(res=>{
            console.log(res);
            this.allList = res;
            this.$apply();
          })
    },
    //购物车加
    addnum: function(e) {
      if(e.currentTarget.dataset.currentgood.number >=99){
        return
      }
      this.changeFoodNum(e.currentTarget.dataset.currentgood.id,
                         e.currentTarget.dataset.currentgood.goods_id,
                         e.currentTarget.dataset.currentgood.number + 1,
                         e.currentTarget.dataset.currentshop.id);
    },
    //购物减
    subnum: function(e) {

      if(e.currentTarget.dataset.currentgood.number == 1){
        return 
      }
      this.changeFoodNum(e.currentTarget.dataset.currentgood.id,
                         e.currentTarget.dataset.currentgood.goods_id,
                         e.currentTarget.dataset.currentgood.number - 1,
                         e.currentTarget.dataset.currentshop.id);
    },

    //购物车删除
    delecart: function (e) { 
      var that = this;
      var currentGood = e.currentTarget.dataset.currentgood;

      wx.showModal({
        title: '提示',
        content: '确认将该商品移出购物车吗?',
        success: function (res) {
          if (res.confirm) {
            http.post(api.CartDelete,{
              id: currentGood.id,
              user_id:wx.getStorageSync('userInfoInServer').id
            }).then(res=>{
              // console.log(res);
              that.allList = res;
              that.$apply();
            })
          }
        }
        })
      },    
    //将下架商品移除购物车
    lowerShelf(e){
      console.log(e)
      var that = this;
        wx.showModal({
          title: '提示',
          content: '该商品已下架您确定将它移出购物车吗?',
          success: function (res) {
            if (res.confirm) {
              http.post(api.CartDelete,{
                id: e.id,
                user_id:wx.getStorageSync('userInfoInServer').id
              }).then(res=>{
                that.allList = res;
                that.$apply();
              })
            }
          }
        })
    },
    //提交订单
    goOrder:function(e){
      //确认用户绑定手机号
      // if(!wx.getStorageSync("userInfoInServer").phone){
      //   wx.showModal({
      //     title: '提交失败',
      //     cancelText: '下次再说',
      //     confirmText: "前往绑定",
      //     confirmColor: "#ff6b5d",
      //     content: "您还没有绑定手机号哟～",
      //     success:function(e){
      //       wx.navigateTo({
      //         url: '/pages/bindPhone',
      //       })
      //     },
      //   })
      //   return;
      // }
      //确认用户设置默认地址
      if (!wx.getStorageSync("userDefaultAddress").is_default){
        wx.showModal({
          title: '提交失败',
          cancelText: '下次再说',
          confirmText: "前往设置",
          confirmColor: "#ff6b5d",
          content: "您还没有设置默认地址哟～",
          success:function(e){
            wx.navigateTo({
              url: '/pages/my-func?id=1',
            })
          },
        })
        return;
      }
      //跳转确认购物车不为空
       http.get(api.CartCheckout,{address_id:wx.getStorageSync("userDefaultAddress").id,
            shop_id: e.currentTarget.dataset.currentshop.id,
            user_id:wx.getStorageSync('userInfoInServer').id}).then(res=>{
            if(res.msg){
              wx.showToast({
                title:res.msg,
                icon:'none'
              })
            }else{
              // 后台购物车中的数据
              wx.navigateTo({
                url:'/pages/orderCheck?addressId=' + wx.getStorageSync("userDefaultAddress").id + '&shopId=' + e.currentTarget.dataset.currentshop.id,
              })
            }   
        })
    },
    gotoindex(e){
      wepy.switchTab({
        url: '/pages/index'
      })
    }
  }
}
</script>  
  
